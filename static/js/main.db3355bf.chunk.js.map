{"version":3,"sources":["components/Pagination/Pagination.jsx","components/Video/Video.jsx","components/Videos/Videos.jsx","components/App/App.jsx","index.jsx"],"names":["Pagination","props","calculateTotalPages","totalResults","resultsPerPage","Math","ceil","state","currentPage","this","searchResponse","searchVideos","searchTerm","nextPageToken","prevPageToken","totalPages","pageInfo","isFirstPage","isLastPage","className","onClick","setState","type","Component","defaultProps","shape","Video","video","snippet","thumbnails","title","description","publishedAt","channelTitle","id","src","high","url","alt","href","videoId","moment","format","Videos","items","map","key","etag","App","concatPageToken","pageToken","query","onSubmit","e","preventDefault","placeholder","value","onChange","target","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db3355bf.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { shape, func, string } from 'prop-types';\nimport './Pagination.css';\n\nexport default class Pagination extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: 1,\n    };\n  }\n\n  calculateTotalPages = ({ totalResults, resultsPerPage }) =>\n    Math.ceil(totalResults / resultsPerPage);\n\n  render() {\n    const { searchResponse, searchVideos, searchTerm } = this.props;\n    const { nextPageToken, prevPageToken } = searchResponse;\n    const { currentPage } = this.state;\n    const totalPages = this.calculateTotalPages(searchResponse.pageInfo);\n    const isFirstPage = currentPage === 1;\n    const isLastPage = currentPage === totalPages;\n\n    return (\n      <div>\n        <button\n          className=\"page-selector\"\n          onClick={() => {\n            if (currentPage > 1) {\n              this.setState({ currentPage: currentPage - 1 });\n              searchVideos(searchTerm, prevPageToken);\n            }\n          }}\n          type=\"button\"\n        >\n          <i\n            className={`fa fa-chevron-left ${isFirstPage ? 'disabled' : ''}`}\n          />\n        </button>\n        <span className=\"mx-2\">\n          {currentPage} / {totalPages}\n        </span>\n        <button\n          className=\"page-selector\"\n          onClick={() => {\n            if (currentPage < totalPages) {\n              this.setState({ currentPage: currentPage + 1 });\n              searchVideos(searchTerm, nextPageToken);\n            }\n          }}\n          type=\"button\"\n        >\n          <i\n            className={`fa fa-chevron-right ${isLastPage ? 'disabled' : ''}`}\n          />\n        </button>\n      </div>\n    );\n  }\n}\n\nPagination.defaultProps = {\n  searchResponse: shape({\n    nextPageToken: null,\n    prevPageToken: null,\n  }),\n};\n\nPagination.propTypes = {\n  searchResponse: shape({\n    nextPageToken: string,\n    prevPageToken: string,\n  }),\n  searchVideos: func.isRequired,\n  searchTerm: string.isRequired,\n};\n","import React from 'react';\nimport moment from 'moment';\nimport { shape, string } from 'prop-types';\nimport './Video.css';\n\nconst Video = ({ video }) => {\n  const {\n    thumbnails,\n    title,\n    description,\n    publishedAt,\n    channelTitle,\n  } = video.snippet;\n  const { id } = video;\n\n  return (\n    <div className=\"card container\">\n      <div className=\"row\">\n        <div className=\"col-md-4 col-sm-12\">\n          <img\n            src={thumbnails.high.url}\n            className=\"img-fluid\"\n            alt=\"thumbnail\"\n          />\n        </div>\n\n        <div className=\"col-md-8 col-sm-12\">\n          <h3 className=\"video-title pb-2\">{title}</h3>\n          <div>{description}</div>\n          <div className=\"py-4\">\n            <a\n              className=\"video-link\"\n              href={`https://www.youtube.com/watch?v=${id.videoId}`}\n            >\n              View\n            </a>\n          </div>\n          <div className=\"video-date-channel\">\n            {moment(publishedAt).format('DD MMMM YYYY')} by {channelTitle}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nVideo.propTypes = {\n  video: shape({\n    snippet: shape({\n      title: string.isRequired,\n      description: string.isRequired,\n      publishedAt: string.isRequired,\n      channelTitle: string.isRequired,\n    }).isRequired,\n    id: shape({\n      videoId: string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default Video;\n","import React from 'react';\nimport { shape, string, func, arrayOf, number } from 'prop-types';\nimport Pagination from '../Pagination/Pagination';\nimport Video from '../Video/Video';\n\nconst Videos = ({ searchResponse, searchTerm, searchVideos }) => (\n  <div>\n    <div className=\"d-flex flex-row justify-content-between\">\n      <div>Total Results: {searchResponse.pageInfo.totalResults}</div>\n      <Pagination\n        searchResponse={searchResponse}\n        searchTerm={searchTerm}\n        searchVideos={searchVideos}\n      />\n    </div>\n    <div>\n      {searchResponse.items.map(video => (\n        <Video key={video.etag} video={video} />\n      ))}\n    </div>\n  </div>\n);\n\nVideos.propTypes = {\n  searchResponse: shape({\n    pageInfo: shape({\n      totalResults: number.isRequired,\n    }).isRequired,\n    items: arrayOf(\n      shape({\n        etag: string.isRequired,\n      }),\n    ).isRequired,\n  }).isRequired,\n  searchTerm: string.isRequired,\n  searchVideos: func.isRequired,\n};\n\nexport default Videos;\n","import React, { Component } from 'react';\nimport Videos from '../Videos/Videos';\nimport searchResponse from '../../testData/searchResponse.json';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResponse,\n      searchTerm: '',\n    };\n  }\n\n  componentDidMount() {\n    this.searchVideos('react hooks');\n  }\n\n  concatPageToken = (url, pageToken) => {\n    if (pageToken) {\n      return `${url}&pageToken=${pageToken}`;\n    }\n    return url;\n  };\n\n  searchVideos = (query, pageToken) => {\n    // const xhr = new XMLHttpRequest(); // eslint-disable-line\n    // xhr.addEventListener('load', e => {\n    //   this.setState({ searchResponse: JSON.parse(e.target.response) });\n    // });\n    // xhr.open(\n    //   'GET',\n    //   this.concatPageToken(\n    //     `https://www.googleapis.com/youtube/v3/search?part=snippet&type=video&maxResults=5&q=${query}&key=${process.env.REACT_APP_API_KEY}`,\n    //     pageToken,\n    //   ),\n    // );\n    // xhr.send();\n  };\n\n  render() {\n    const { searchResponse, searchTerm } = this.state;\n\n    return (\n      <div className=\"container\">\n        <form\n          id=\"youtube-video-search-form\"\n          onSubmit={e => {\n            this.searchVideos(searchTerm);\n            e.preventDefault();\n          }}\n          className=\"py-4\"\n        >\n          <div className=\"row w-75 mx-auto py-2\">\n            <input\n              className=\"search-input col-11 py-2\"\n              type=\"text\"\n              placeholder=\"Search...\"\n              value={searchTerm}\n              onChange={e => this.setState({ searchTerm: e.target.value })}\n            />\n            <button type=\"submit\" className=\"col-1 search-button\">\n              <i className=\"fa fa-search\" />\n            </button>\n          </div>\n        </form>\n\n        {searchResponse.items && searchResponse.items.length ? (\n          <Videos\n            searchResponse={searchResponse}\n            searchTerm={searchTerm}\n            searchVideos={this.searchVideos}\n          />\n        ) : (\n          'Not Found, try another Search'\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}